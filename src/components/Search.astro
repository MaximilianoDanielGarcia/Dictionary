<form autocomplete="off">
    <input
        type="search"
        placeholder="Search for any word..."
        name="search-input"
        id="search-input"
    />
    <button type="submit"
        ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 18 18"
            ><path
                fill="none"
                stroke="#A445ED"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="1.5"
                d="m12.663 12.663 3.887 3.887M1 7.664a6.665 6.665 0 1 0 13.33 0 6.665 6.665 0 0 0-13.33 0Z"
            ></path></svg
        ></button
    >
</form>
<p id="message-validation"></p>

<style>
    form {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 52%;
        min-width: 736px;
        height: 64px;
        border-radius: 16px;
        background: var(--bg-input);
        padding: 24px;
    }

    button {
        border: none;
        background: transparent;
        cursor: pointer;
    }

    input {
        background: transparent;
        border: none;
        font-family: var(--font-family);
        color: var(--color);
        font-size: 20px;
        font-weight: 700;
        outline: none;
        appearance: none;
        width: 96%;
        caret-color: var(--accent);
    }

    input:autofill,
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
        -webkit-text-fill-color: var(--color) !important;
        -webkit-box-shadow: 0 0 0 30px var(--bg-input) inset !important;
    }

    input::-webkit-search-cancel-button {
        cursor: pointer;
    }

    input:focus-visible {
        outline: none;
    }

    form:focus-within {
        border: 1px solid var(--violet);
    }

    #message-validation {
        width: 52%;
        color: var(--tomato);
        font-family: var(--font-family);
        font-size: 20px;
        font-weight: 400;
        margin-top: 8px;
        opacity: 0;
    }

    @media screen and (width <= 810px) {
        form {
            width: 100%;
            min-width: 100%;
        }

        #message-validation {
            width: 100%;
        }
    }

    @media screen and (width <= 540px) {
        form {
            height: 48px;
        }

        input {
            font-size: 16px;
            width: 90%;
        }

        button {
           padding-top: 4px;
        }

        #message-validation {
            font-size: 14px;
        }
    }
</style>

<script>
    const form = document.querySelector("form");
    const searchInput = document.getElementById("search-input");
    const msgValidation = document.getElementById("message-validation");
    const dictionaryApi = "https://api.dictionaryapi.dev/api/v2/entries/en/";

    form.addEventListener("submit", (e) => {
        e.preventDefault();

        const form = e.target as HTMLFormElement;
        const search = form.children[0] as HTMLInputElement;

        if (search.value != "") {
            let data = searchWord(search.value);

            data.then(wordData => {
                localStorage.setItem("response-data", JSON.stringify(wordData));
                window.dispatchEvent(new Event('local-storage'))
            });
           
        } else {
            msgValidation.innerText = "Whoops, can’t be empty…";
            msgValidation.style.opacity = "1";
            form.style.border = "1px solid var(--tomato)";
        }
    });

    searchInput.addEventListener("focus", (e) => {
        msgValidation.style.opacity = "0";
        form.style.border = "1px solid var(--violet)";
    });

    searchInput.addEventListener("blur", (e) => {
        form.style.border = "none";
    });

    async function searchWord(word) {
        const response = await fetch(`${dictionaryApi}${word}`)
        
        localStorage.setItem('response-ok', response.ok.toString());
        
        return await response.json();
    }
</script>
